<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Targets>
  <Target Name="C:\Users\RGHZ001\ValidateurFormulaire\ValidateurFormulaire\Master\ValidationFormulaire\ValidationFormulaire.Core\bin\Debug\ValidationFormulaire.Core.dll">
   <Modules>
    <Module Name="validationformulaire.core.dll">
     <Namespaces>
      <Namespace Name="ValidationFormulaire.Core">
       <Types>
        <Type Name="BarCodeConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConvertBarCodeToData(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Vérifier si les requêtes SQL présentent des failles de sécurité" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-03-24 15:28:03Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Users\RGHZ001\ValidateurFormulaire\ValidateurFormulaire\Master\ValidationFormulaire\ValidationFormulaire.Core\Model\Converters" File="BarCodeConverter.vb" Line="34">La chaîne de requête passée en 'OleDbCommand.CommandText.Set(String)' dans 'BarCodeConverter.ConvertBarCodeToData(String)' n'a pas pu contenir les variables 'row("TABLE_NAME")' suivantes. Si ces variables proviennent d'entrées d'utilisateur, utilisez une procédure stockée ou une requête SQL paramétrable au lieu de générer la requête à l'aide de concaténations de chaîne.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PDFConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PDFToImage(System.Web.HttpPostedFileBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Ne pas supprimer d'objets plusieurs fois" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-03-24 15:28:03Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RGHZ001\ValidateurFormulaire\ValidateurFormulaire\Master\ValidationFormulaire\ValidationFormulaire.Core\Model\Converters" File="PDFConverter.vb" Line="45">L'objet 'rasterizer' peut être supprimé plusieurs fois dans la méthode 'PDFConverter.PDFToImage(HttpPostedFileBase)'. Pour éviter de générer un System.ObjectDisposedException, n'appelez pas la méthode Dispose plus d'une fois par objet.: Lines: 45</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="Ne pas supprimer d'objets plusieurs fois" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Ne pas supprimer d'objets plusieurs fois</Name>
   <Description>Il est possible d'appeler plusieurs fois une méthode Dispose correctement implémentée sans lever d'exception. La réussite de l'opération n'est toutefois pas garantie et, pour éviter de générer un System.ObjectDisposedException, n'appelez pas cette méthode plus d'une fois par objet.</Description>
   <Resolution Name="Default">L'objet {0} peut être supprimé plusieurs fois dans la méthode {1}. Pour éviter de générer un System.ObjectDisposedException, n'appelez pas la méthode Dispose plus d'une fois par objet.: Lines: 45</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Vérifier si les requêtes SQL présentent des failles de sécurité" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Vérifier si les requêtes SQL présentent des failles de sécurité</Name>
   <Description>Une chaîne de commande SQL générée par une entrée d'utilisateur est vulnérable aux attaques par injection de code SQL. Microsoft SQL Server ainsi que d'autres serveurs de base de données prennent en charge les procédures stockées et les requêtes SQL paramétrables, qui réduisent les risques de telles attaques.</Description>
   <Resolution Name="WithNonLiterals">La chaîne de requête passée en {0} dans {1} n'a pas pu contenir les variables {2} suivantes. Si ces variables proviennent d'entrées d'utilisateur, utilisez une procédure stockée ou une requête SQL paramétrable au lieu de générer la requête à l'aide de concaténations de chaîne.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Catégorie</String>
  <String Key="Certainty">Certitude</String>
  <String Key="CollapseAll">Réduire tout</String>
  <String Key="CheckId">ID de contrôle</String>
  <String Key="Error">Erreur</String>
  <String Key="Errors">erreur(s)</String>
  <String Key="ExpandAll">Développer tout</String>
  <String Key="Help">Aide</String>
  <String Key="Line">Ligne</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Emplacement non stocké dans le fichier Pdb]</String>
  <String Key="Project">Projet</String>
  <String Key="Resolution">Résolution</String>
  <String Key="Rule">Règle</String>
  <String Key="RuleFile">Fichier de règles</String>
  <String Key="RuleDescription">Description de la règle</String>
  <String Key="Source">Source</String>
  <String Key="Status">État</String>
  <String Key="Target">Cible</String>
  <String Key="Warning">Avertissement</String>
  <String Key="Warnings">avertissement(s)</String>
  <String Key="ReportTitle">Rapport d'analyse du code</String>
 </Localized>
</FxCopReport>
